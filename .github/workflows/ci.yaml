name: FE CI Pipeline

on:
  push:
    branches:
      - main
    #  - SHOWCASE-90-pipeline-to-build-and-push
  pull_request:
    branches:
      - main

jobs:
  # test:
  #   name: Test & Lint Frontend Code
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18
  #         cache: "npm"

  #     - name: Install Dependencies
  #       run: |
  #         rm -rf node_modules
  #         rm -f package-lock.json
  #         npm cache clean --force
  #         npm install

  #     - name: Run Unit Tests
  #       run: npm test

  # sonar:
  #   name: SonarQube Analysis
  #   # needs: test  # Runs only if tests & linting pass
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Run Static Code Analysis with SonarQube
  #       uses: sonarsource/sonarqube-scan-action@v2
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #       with:
  #         projectBaseDir: .
  #         args: >
  #           -Dsonar.projectKey=showcase-ui
  #           -Dsonar.sources=.

  build:
    name: Build & Push Frontend Docker Image
    #needs: sonar
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            public.ecr.aws/k8o4d9r5/bcshowcase/ditp-showcase-creator-ui:latest
            public.ecr.aws/k8o4d9r5/bcshowcase/ditp-showcase-creator-ui:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  image-scan:
    name: Image Scan - Frontend
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Scan Docker Image
        uses: ./.github/actions/trivy-scan
        with:
          scan-type: 'image'
          scan-ref: 'public.ecr.aws/k8o4d9r5/bcshowcase/ditp-showcase-creator-ui:${{ github.sha }}'
          scan-title: 'Docker Image Scan Results for Frontend'
