import React, { ReactNode } from "react";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { ThemeProvider } from "@/components/theme-provider";

import "./globals.css";
import { NavBar } from "@/components/navbar";
import { Footer } from "@/components/footer";
import { JSONPreview } from "@/components/json-preview";
import i18nConfig from "@/i18n.config";
import InternationalizationProvider from "@/providers/InternationalizationProvider";
import {PageParams} from "@/types";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// TODO: Fix font styles

export function generateStaticParams() {
  return i18nConfig.locales.map(locale => ({ locale }));
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: ReactNode;
  params: PageParams;
}>) {
  const { locale } = await params

  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <InternationalizationProvider locale={locale}>
            <div className="min-h-screen bg-light-bg dark:bg-dark-bg text-light-text">
              <NavBar locale={locale}/>
              {children}
              {process.env.NODE_ENV === "development" && <JSONPreview />}
              <Footer locale={locale}/>
            </div>
          </InternationalizationProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
